//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GridCellTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(GridCellType));
		L.RegVar("Obstacle", get_Obstacle, null);
		L.RegVar("Way", get_Way, null);
		L.RegVar("Safe", get_Safe, null);
		L.RegVar("ObstacleWay", get_ObstacleWay, null);
		L.RegVar("Water", get_Water, null);
		L.RegVar("Road", get_Road, null);
		L.RegVar("WaterRipple", get_WaterRipple, null);
		L.RegVar("Tunnel", get_Tunnel, null);
		L.RegVar("Border", get_Border, null);
		L.RegVar("HighArea", get_HighArea, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<GridCellType>.Check = CheckType;
		StackTraits<GridCellType>.Push = Push;
	}

	static void Push(IntPtr L, GridCellType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(GridCellType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Obstacle(IntPtr L)
	{
		ToLua.Push(L, GridCellType.Obstacle);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Way(IntPtr L)
	{
		ToLua.Push(L, GridCellType.Way);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Safe(IntPtr L)
	{
		ToLua.Push(L, GridCellType.Safe);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ObstacleWay(IntPtr L)
	{
		ToLua.Push(L, GridCellType.ObstacleWay);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Water(IntPtr L)
	{
		ToLua.Push(L, GridCellType.Water);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Road(IntPtr L)
	{
		ToLua.Push(L, GridCellType.Road);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WaterRipple(IntPtr L)
	{
		ToLua.Push(L, GridCellType.WaterRipple);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Tunnel(IntPtr L)
	{
		ToLua.Push(L, GridCellType.Tunnel);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Border(IntPtr L)
	{
		ToLua.Push(L, GridCellType.Border);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HighArea(IntPtr L)
	{
		ToLua.Push(L, GridCellType.HighArea);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		GridCellType o = (GridCellType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

