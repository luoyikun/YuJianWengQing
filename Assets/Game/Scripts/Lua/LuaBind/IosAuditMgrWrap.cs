//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class IosAuditMgrWrap
{
	/* public static void Register(LuaState L)
	{
		L.BeginClass(typeof(IosAuditMgr), typeof(System.Object));
		L.RegFunction("Startup", Startup);
		L.RegFunction("SendMsgToAuditUI", SendMsgToAuditUI);
		L.RegFunction("SwitchToIosAuditUI", SwitchToIosAuditUI);
		L.RegFunction("BindMsgCallback", BindMsgCallback);
		L.RegFunction("New", _CreateIosAuditMgr);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateIosAuditMgr(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				IosAuditMgr obj = new IosAuditMgr();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: IosAuditMgr.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Startup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			IosAuditMgr.Startup();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMsgToAuditUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			IosAuditMgr.SendMsgToAuditUI(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SwitchToIosAuditUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			IosAuditMgr.SwitchToIosAuditUI();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BindMsgCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Events.UnityAction<string> arg0 = (UnityEngine.Events.UnityAction<string>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<string>>(L, 1);
			IosAuditMgr.BindMsgCallback(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	} */
}

