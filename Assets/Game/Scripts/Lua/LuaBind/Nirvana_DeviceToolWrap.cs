//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Nirvana_DeviceToolWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("DeviceTool");
		L.RegFunction("GetDeviceID", GetDeviceID);
		L.RegFunction("GetVersion", GetVersion);
		//L.RegFunction("GetNetworkAccessibility", GetNetworkAccessibility);
		L.RegFunction("Quit", Quit);
		L.RegFunction("SetScreenBrightness", SetScreenBrightness);
		L.RegFunction("GetScreenBrightness", GetScreenBrightness);
		L.RegFunction("GetUserScreenBrightness", GetUserScreenBrightness);
		L.RegFunction("GetScreenSafeArea", GetScreenSafeArea);
		L.RegFunction("GetScreenSafeAreaFix", GetScreenSafeAreaFix);
		L.RegFunction("GetObbFilePath", GetObbFilePath);
		//L.RegFunction("IsEmulator", IsEmulator);
		//L.RegFunction("IsAndroid64", IsAndroid64);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDeviceID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = Nirvana.DeviceTool.GetDeviceID();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetVersion(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = Nirvana.DeviceTool.GetVersion();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetNetworkAccessibility(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			bool o = Nirvana.DeviceTool.GetNetworkAccessibility();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Quit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Nirvana.DeviceTool.Quit();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetScreenBrightness(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			Nirvana.DeviceTool.SetScreenBrightness(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetScreenBrightness(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			float o = Nirvana.DeviceTool.GetScreenBrightness();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUserScreenBrightness(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			float o = Nirvana.DeviceTool.GetUserScreenBrightness();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetScreenSafeArea(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.Rect arg0;
			int arg1;
			int arg2;
			Nirvana.DeviceTool.GetScreenSafeArea(out arg0, out arg1, out arg2);
			ToLua.PushValue(L, arg0);
			LuaDLL.lua_pushinteger(L, arg1);
			LuaDLL.lua_pushinteger(L, arg2);
			return 3;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetScreenSafeAreaFix(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.Rect arg0;
			int arg1;
			int arg2;
			Nirvana.DeviceTool.GetScreenSafeAreaFix(out arg0, out arg1, out arg2);
			ToLua.PushValue(L, arg0);
			LuaDLL.lua_pushinteger(L, arg1);
			LuaDLL.lua_pushinteger(L, arg2);
			return 3;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetObbFilePath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = Nirvana.DeviceTool.GetObbFilePath();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsEmulator(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			bool o = Nirvana.DeviceTool.IsEmulator();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsAndroid64(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			bool o = Nirvana.DeviceTool.IsAndroid64();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

