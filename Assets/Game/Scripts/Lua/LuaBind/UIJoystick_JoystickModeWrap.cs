//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIJoystick_JoystickModeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UIJoystick.JoystickMode));
		L.RegVar("Fixed", get_Fixed, null);
		L.RegVar("Dynamic", get_Dynamic, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<UIJoystick.JoystickMode>.Check = CheckType;
		StackTraits<UIJoystick.JoystickMode>.Push = Push;
	}

	static void Push(IntPtr L, UIJoystick.JoystickMode arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(UIJoystick.JoystickMode), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Fixed(IntPtr L)
	{
		ToLua.Push(L, UIJoystick.JoystickMode.Fixed);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Dynamic(IntPtr L)
	{
		ToLua.Push(L, UIJoystick.JoystickMode.Dynamic);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UIJoystick.JoystickMode o = (UIJoystick.JoystickMode)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

