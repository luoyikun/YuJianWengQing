//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Nirvana_UnitySingleton_Nirvana_AudioManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Nirvana.UnitySingleton<Nirvana.AudioManager>), typeof(UnityEngine.MonoBehaviour), "UnitySingleton_Nirvana_AudioManager");
		L.RegFunction("CheckInstance", CheckInstance);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, null);
		L.RegVar("InstanceExisted", get_InstanceExisted, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CheckInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Nirvana.UnitySingleton<Nirvana.AudioManager>.CheckInstance();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, Nirvana.UnitySingleton<Nirvana.AudioManager>.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_InstanceExisted(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Nirvana.UnitySingleton<Nirvana.AudioManager>.InstanceExisted);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

