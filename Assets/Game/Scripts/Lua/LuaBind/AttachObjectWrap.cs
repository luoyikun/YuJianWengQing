//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AttachObjectWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AttachObject), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("SetAttached", SetAttached);
		L.RegFunction("CleanAttached", CleanAttached);
		L.RegFunction("SetTransform", SetTransform);
		L.RegFunction("GetPhysiqueConfig", GetPhysiqueConfig);
		L.RegFunction("ChangeTransformAllProf", ChangeTransformAllProf);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("IsRotationZero", get_IsRotationZero, set_IsRotationZero);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAttached(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AttachObject obj = (AttachObject)ToLua.CheckObject(L, 1, typeof(AttachObject));
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			obj.SetAttached(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CleanAttached(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AttachObject obj = (AttachObject)ToLua.CheckObject(L, 1, typeof(AttachObject));
			obj.CleanAttached();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetTransform(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AttachObject obj = (AttachObject)ToLua.CheckObject(L, 1, typeof(AttachObject));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetTransform(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPhysiqueConfig(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AttachObject obj = (AttachObject)ToLua.CheckObject(L, 1, typeof(AttachObject));
			AttachObject.PhysiqueConfig[] o = obj.GetPhysiqueConfig();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ChangeTransformAllProf(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AttachObject obj = (AttachObject)ToLua.CheckObject(L, 1, typeof(AttachObject));
			AttachObject.PhysiqueConfig[] arg0 = ToLua.CheckStructArray<AttachObject.PhysiqueConfig>(L, 2);
			obj.ChangeTransformAllProf(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsRotationZero(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AttachObject obj = (AttachObject)o;
			bool ret = obj.IsRotationZero;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsRotationZero on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsRotationZero(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AttachObject obj = (AttachObject)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsRotationZero = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsRotationZero on a nil value");
		}
	}
}

