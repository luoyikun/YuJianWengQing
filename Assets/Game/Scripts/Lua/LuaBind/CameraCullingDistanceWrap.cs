//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class CameraCullingDistanceWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(CameraCullingDistance), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("UpdateDistances", UpdateDistances);
		L.RegFunction("SetDistance", SetDistance);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("CullDistances", get_CullDistances, set_CullDistances);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateDistances(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CameraCullingDistance obj = (CameraCullingDistance)ToLua.CheckObject<CameraCullingDistance>(L, 1);
			obj.UpdateDistances();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetDistance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			CameraCullingDistance obj = (CameraCullingDistance)ToLua.CheckObject<CameraCullingDistance>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetDistance(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CullDistances(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraCullingDistance obj = (CameraCullingDistance)o;
			System.Collections.Generic.List<CameraLayerInfo> ret = obj.CullDistances;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CullDistances on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CullDistances(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraCullingDistance obj = (CameraCullingDistance)o;
			System.Collections.Generic.List<CameraLayerInfo> arg0 = (System.Collections.Generic.List<CameraLayerInfo>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<CameraLayerInfo>));
			obj.CullDistances = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CullDistances on a nil value");
		}
	}
}

