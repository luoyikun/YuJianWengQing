//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class OverrideOrderGroupMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(OverrideOrderGroupMgr), typeof(Nirvana.Singleton<OverrideOrderGroupMgr>));
		L.RegFunction("OnGameStartup", OnGameStartup);
		L.RegFunction("OnGameStop", OnGameStop);
		L.RegFunction("SetGroupCanvasOrderInterval", SetGroupCanvasOrderInterval);
		L.RegFunction("AddToGroup", AddToGroup);
		L.RegFunction("RemoveFromGroup", RemoveFromGroup);
		L.RegFunction("SetGroupCanvasDirty", SetGroupCanvasDirty);
		L.RegFunction("Update", Update);
		L.RegFunction("New", _CreateOverrideOrderGroupMgr);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateOverrideOrderGroupMgr(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				OverrideOrderGroupMgr obj = new OverrideOrderGroupMgr();
				ToLua.PushSealed(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: OverrideOrderGroupMgr.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnGameStartup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			OverrideOrderGroupMgr obj = (OverrideOrderGroupMgr)ToLua.CheckObject(L, 1, typeof(OverrideOrderGroupMgr));
			obj.OnGameStartup();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnGameStop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			OverrideOrderGroupMgr obj = (OverrideOrderGroupMgr)ToLua.CheckObject(L, 1, typeof(OverrideOrderGroupMgr));
			obj.OnGameStop();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGroupCanvasOrderInterval(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			OverrideOrderGroupMgr obj = (OverrideOrderGroupMgr)ToLua.CheckObject(L, 1, typeof(OverrideOrderGroupMgr));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetGroupCanvasOrderInterval(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddToGroup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			OverrideOrderGroupMgr obj = (OverrideOrderGroupMgr)ToLua.CheckObject(L, 1, typeof(OverrideOrderGroupMgr));
			IOverrideOrder arg0 = (IOverrideOrder)ToLua.CheckObject<IOverrideOrder>(L, 2);
			UnityEngine.Canvas o = obj.AddToGroup(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveFromGroup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			OverrideOrderGroupMgr obj = (OverrideOrderGroupMgr)ToLua.CheckObject(L, 1, typeof(OverrideOrderGroupMgr));
			UnityEngine.Canvas arg0 = (UnityEngine.Canvas)ToLua.CheckObject(L, 2, typeof(UnityEngine.Canvas));
			IOverrideOrder arg1 = (IOverrideOrder)ToLua.CheckObject<IOverrideOrder>(L, 3);
			obj.RemoveFromGroup(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGroupCanvasDirty(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			OverrideOrderGroupMgr obj = (OverrideOrderGroupMgr)ToLua.CheckObject(L, 1, typeof(OverrideOrderGroupMgr));
			UnityEngine.Canvas arg0 = (UnityEngine.Canvas)ToLua.CheckObject(L, 2, typeof(UnityEngine.Canvas));
			obj.SetGroupCanvasDirty(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			OverrideOrderGroupMgr obj = (OverrideOrderGroupMgr)ToLua.CheckObject(L, 1, typeof(OverrideOrderGroupMgr));
			obj.Update();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

